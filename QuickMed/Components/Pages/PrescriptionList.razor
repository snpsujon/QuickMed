@page "/prescription-list"
@using QuickMed.BaseComponent
@using QuickMed.DB
@inherits BaseAdvice

<h3 class="text-primary"> <i class="fas fa-prescription"></i> Prescription List</h3>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                @if (prescriptions == null)
                {
                    <p>Loading prescriptions...</p>
                }
                else if (!prescriptions.Any())
                {
                    <p>No prescriptions found.</p>
                }
                else
                {
                    <table id="datatable-prescriptionList" class="table table-striped table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                        <thead>
                            <tr>
                                <th class="border-top-0">Name</th>
                                <th class="border-top-0">Value</th>
                                <th class="border-top-0 text-end">Action</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var prescription in prescriptions)
                            {
                                <tr>
                                    <td>@prescription.Name</td>
                                    <td>@prescription.Value</td>
                                    <td class="text-end">
                                        <button class="btn btn-soft-primary" title="Edit"><i class="dripicons-pencil"></i></button>
                                        <button class="btn btn-soft-danger" title="Delete"><i class="dripicons-trash"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->
@code {
    private List<Prescription> prescriptions;

    protected override async Task OnInitializedAsync()
    {
        // Load prescription data (this is a placeholder - replace with actual data fetching logic)
        prescriptions = await GetPrescriptionsAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("makeDataTable", "datatable-prescriptionList");
        }
    }

    private async Task<List<Prescription>> GetPrescriptionsAsync()
    {
        // Placeholder for actual data retrieval logic
        return new List<Prescription>
        {
            new Prescription { Name = "2C", Value = "২ চামচ দিনে ৩ বার" }
        };
    }

    private class Prescription
    {
        public string Name { get; set; }
        public string Value { get; set; }
    }
}

@* @page "/prescription-list"
@using QuickMed.BaseComponent
@using QuickMed.DB
@inherits BaseAdvice


<h3 class="text-primary"> <i class="dripicons-view-list"></i>  Prescription List</h3>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <table id="datatable-prescriptionList" class="table table-striped table-bordered dt-responsive nowrap" style="border-collapse: collapse; border-spacing: 0; width: 100%;">
                    <thead>
                        <tr>
                            <th class="border-top-0">Name</th>
                            <th class="border-top-0">Value</th>
                            <th class="border-top-0 text-end">Action</th>
                        </tr>
                    </thead>

                    <tbody>
                        <tr>
                            <td>2C</td>
                            <td>২ চামচ দিনে ৩ বার </td>
                            <td class="text-end"> <i class="dripicons-pencil btn btn-soft-primary"></i><i class="dripicons-trash btn btn-soft-danger"></i></td>
                        </tr><!--end tr-->

                    </tbody>
                </table>
            </div>
        </div>
    </div> <!-- end col -->
</div> <!-- end row -->
@code {
    @code {
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await JS.InvokeVoidAsync("makeDataTable", "datatable-prescriptionList");
            }
        }
    }
} *@